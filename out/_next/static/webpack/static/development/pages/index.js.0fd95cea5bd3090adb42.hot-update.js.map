{"version":3,"file":"static/webpack/static/development/pages/index.js.0fd95cea5bd3090adb42.hot-update.js","sources":["webpack:///./components/Sort.js","webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\n\nexport default ({ order, sort }) => {\n  return (\n    <div className=\"sort-wrap\">\n      <label htmlFor=\"sort\">Sort By</label>\n      <select value={order} onChange={sort} name=\"sort\" id=\"sort\" className=\"sort\">\n        <option value=\"new\">Newest</option>\n        <option value=\"old\">Oldest</option>\n        <option value=\"high\">High to low</option>\n        <option value=\"low\">Low to high</option>\n      </select>\n    </div>)}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport fetch from 'isomorphic-unfetch';\nimport Review from '../components/Review';\nimport RatingBox from '../components/RatingBox';\nimport Sort from '../components/Sort';\nimport Pagination from '../components/Pagination';\nimport '../static/css/style.css';\n\nconst paginate = (array, reviewsPerPage, page) => {\n  --page;\n  return array.slice(page * reviewsPerPage, (page + 1) * reviewsPerPage);\n}\n\nclass App extends Component {\n  static async getInitialProps() {\n    const response = await fetch('https://chuntley56.github.io/product-review/static/data/data.json')\n    const reviews = await response.json()\n    return {reviews: reviews.sort((a, b) => b.date.localeCompare(a.date))}\n  }\n\n  state = {\n    reviews: this.props.reviews,\n    order: 'new',\n    page: 1\n  }\n\nsort = event => {\n  const { order, reviews } = this.state;\n  this.setState({ order: event.target.value }\n)}\n\nchangePage = event => {\n  const { page } = this.state;\n  event.preventDefault();\n  event.target.value === 'next' ?\n  this.setState({ page: page + 1 }) :\n  this.setState({ page: page - 1 })\n}\n\nrender() {\n  const { page, reviews, sort } = this.state;\n  const totalReviews = reviews.length;\n  const reviewsPerPage = 4;\n  const indexLastReview = page * reviewsPerPage;\n  const indexFirstReview = indexLastReview - reviewsPerPage;\n  const currentReviews = paginate(reviews, reviewsPerPage, page);\n  const lastPage = Math.ceil(totalReviews / reviewsPerPage);\n  const rating = (Math.round(reviews.reduce((total, { rating }) => rating + total, 0) / reviews.length * 10) / 10) || 5;\n  const review = currentReviews.map((data, index) => {\n    return (\n      <Review data={data} key={index}/>\n    )})\n\n  return (\n    <div className=\"content\">\n    {rating &&  <RatingBox rating={rating} />}\n\n      <section className=\"toolbar\">\n        <div className=\"ui-grid-container\">\n        <div className=\"ui-grid\">\n          <div className=\"ui-grid-col\">\n            <div className=\"review-total\">\n              {page === lastPage ?\n              `${indexFirstReview + 1} of ${totalReviews} Reviews` :\n              `${indexFirstReview + 1}-${indexLastReview} of ${totalReviews} Reviews`}\n            </div>\n          </div>\n          <div className=\"ui-grid-col\">\n              <Sort order={order} sort={this.sort} />\n          </div>\n        </div>\n        </div>\n      </section>\n\n      <section className=\"reviews\">\n        {review}\n      </section>\n\n      <Pagination\n        page={page}\n        lastPage={lastPage}\n        changePage={this.changePage.bind(this)} />\n    </div>\n  )\n}\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;AArEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AALA;AACA;AAyEA;;;;A","sourceRoot":""}